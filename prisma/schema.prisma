generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String         @id @default(uuid())
  email         String         @unique
  password      String
  name          String
  role          UserRole       @default(USER)

  addresses     Address[]

  cart          Cart?

  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
}

model Cart {
  id        String       @id @default(uuid())

  items     CartItem[]

  User      User         @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String       @unique

  createdAt DateTime     @default(now())
  updatedAt DateTime     @updatedAt
}

model CartItem {
  id        String   @id @default(uuid())

  quantity  Int

  cart      Cart     @relation(fields: [cartId], references: [id], onDelete: Cascade)
  cartId    String

  product   Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId String

  createdAt DateTime     @default(now())
  updatedAt DateTime     @updatedAt

  @@unique([cartId, productId])
}

model Address {
  id            String         @id @default(uuid())
  phone         String?
  country       String?
  governorate   String?
  city          String?
  streetAddress String?

  user          User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId        String
}

model Product {
  id                  String        @id @default(cuid())
  title               String        @unique
  description         String
  thumbnail           String
  images              String[]
  price               Float
  discountPercentage  Float?
  rating              Float
  stock               Int
  limit               Int?

  categories          Category[]    @relation("ProductCategories")

  brand               Brand?        @relation(fields: [brandId], references: [id], onDelete: SetNull)
  brandId             String?

  CartItems           CartItem[]

  createdAt           DateTime      @default(now())
  updatedAt           DateTime      @updatedAt
}

model Category {
  id              String        @id @default(uuid())
  name            String        @unique
  slug            String        @unique
  subCategoryName String
  thumbnail       String

  products        Product[]     @relation("ProductCategories")

  parent          Category?     @relation("CategoryToCategory", fields: [parentId], references: [id], onDelete: SetNull)
  parentId        String?

  children        Category[]    @relation("CategoryToCategory")

  brands          Brand[]

  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt

  @@index([slug])
}

model Brand {
  id         String    @id @default(uuid())
  name       String    @unique
  slug       String    @unique
  thumbnail  String?

  products   Product[]

  categories Category[]

  @@index([slug])
}

enum UserRole {
  USER
  ADMIN
}